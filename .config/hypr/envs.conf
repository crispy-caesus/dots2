env = GDK_BACKEND,wayland,x11

# QT: Use wayland if available, fall back to x11 if not.
env = QT_QPA_PLATFORM,wayland,xcb

# Run SDL2 applications on Wayland. Remove or set to x11 if games that
# provide older versions of SDL cause compatibility issues
env = SDL_VIDEODRIVER,wayland

# Clutter package already has wayland enabled, this variable
#will force Clutter applications to try and use the Wayland backend
env = CLUTTER_BACKEND,wayland

# QT Variables

# (From the QT documentation) enables automatic scaling, based on the monitorâ€™s pixel density
# https://doc.qt.io/qt-5/highdpi.html
env = QT_AUTO_SCREEN_SCALE_FACTOR,1

# Tell QT applications to use the Wayland backend, and fall back to x11 if Wayland is unavailable
env = QT_QPA_PLATFORM,wayland,xcb

# Disables window decorations on QT applications
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1

#Tells QT based applications to pick your theme from qt5ct, use with Kvantum.
env = QT_QPA_PLATFORMTHEME,qt5ct



exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = dbus-update-activation-environment --systemd --all
exec-once = systemctl --user import-environment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP



env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland
env = QT_QPA_PLATFORM,wayland
env = QT_QPA_PLATFORMTHEME,qt6ct
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
env = QT_AUTO_SCREEN_SCALE_FACTOR,1
env = MOZ_ENABLE_WAYLAND,1
env = WLR_NO_HARDWARE_CURSORS,1
env = HYPRLAND_NO_SD_NOTIFY=0
